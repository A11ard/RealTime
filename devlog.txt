-Team: RealTime		

 -Revolution Geometry		
 -		
 -Obstacles Overcome--------------------------------------------		
 -		
 -Many quarrels over the design of the game. The team will have two ideas of how to implement a		
 -simple and very similar feature. However these quarrels were easily solved by discussion. Our team was very effective in communicating our thoughts and very lenient towards each others ideas, makingfinal decisions easy to make.		
 -		
 -Not everyone was always on track with the code or the things being discussed. This was overcome yet again with team discussion and commented code. Everyone was also able to explain clearly how their code worked and that benefited the team greatly.		
 -		
 -		
 -Unresolved Issues--------------------------------------------		
 -		
 -- Computer AI is still not as smart as we want it to be(may still have bugs)		
 -- AI doesn't spawn miners(gold generators)		
 -- Game not entirely balanced, may either go in favor of the player or the AI, not an even playing field		
 -		
 -Cool Stuff Learned (conceptual and/or practical)--------------------------------------------		
 -		
 -- Creating issues on github was very beneficial, reminded us on issues we still needed to solve		
 -- Seperating tasks to avoid merge conflicts was beneficial		
 -- Learned that in game development, code efficiency is very important(lag is a huge problem, prohibited cool graphics for our game)		
 -- Communication is so important, and we did that pretty well		
 -		
 -Mid-development Design Changes-------------------------------------------- 		
 -		
 -- Left out some extraneous features such as scoring, multiple commanders, commanders switching units, controlling units on the field with keywords like "retreat", "advance", "defend". These took too much time.		
 -		
 -- Changed the attack of the Wizard, but still implementing priorityQueue as planned, original was too tasking. 		
 -		
 -Lessons Learned--------------------------------------------		
 -		
 -We learned that we should always avoid extraneous stuff till the end so to not waste time. Also we learned that commmunication is key in a team, separating tasks and knowing what to do beforehand will progress the project much faster. 		
 -		
 -I personally learned to create backups of files and to save often. I lost hundreds of lines of code because I pulled from github without saving my own file.		
 -		
 
 -		
 -2017-05-18 XXX
 -- Created plan for 20170518 and updated README file		
 -		
 -2017-05-19 YYY		
 -- Initiated MVP and implemented a basic Swordsmen class.		
 -Swordsmen capable of attack, move, and draw a visual representation of itself.		
 -		
 -- Added actual interactions between swordsmen & implemented necessary functionalities in setup() and draw().		
 -		
 -2017-05-20 YYY		
 -- Resolved small bugs and starts testing of MVP. Will start on taking user inputs for units.		
 -		
 -2017-05-21 XXX		
 -- Added Unit abstract class		
 -- changed YYY's swordsmen class, removed attack()(wasn't working as intended)		
 -- added depth for unit spawn		
 -- Fixed RevolutionGeometry driver class bugs		
 -		
 -2017-05-22 ZZZ	
 -- Added Stack.pde, the underlying data structure for the graveyard in the game 		
 -- Updated driver class to initialize a graveyard for player and computer		
 -- Created plan for 20170518, filled it in with changes that were agreed upon in class today. 		
 -		
 -2017-05-22 YYY		
 -- Implemented targeting. Select closest as target. Attack if in range, else move toward target.		
 -		
 -2017-05-22 XXX
 -- Added Health Bars that are dynamic! Fills in red based on health		
 -- Created Menu class		
 -- Implemented Menu for area designation(boxes and such)		
 -- Created Button class		
 -- Buttons are used for spawning(spawning one character at a time)		
 -- Added currency(1 sec, 1 mana)		
 -		
 -2017-05-23 YYY	
 -- Put target selection to use.		
 -  -Units will now attack closest target if said target is in range.		
 -  -Else the unit will move towards that target.		
 -  		
 -2017-05-23 XXX		
 -- Currency system changed, adds 1 instead of setting it to millis()		
 -- Made flowchart for how the game functions 		
 -		
 -2017-05-23 ZZZ	
 -- UML diagrams created 		
 -		
 -2017-05-24 ZZZ		
 -- Added Miner class: these are units that collect currency 		
 -- Added the button for training miners in class Menu		
 -- Made Miners stationary on training (they stay in the location they spawn in)		
 -- Allowed for miners to add currency 		
 -		
 -2017-05-24 XXX
 -- Fixed Miner functionality: increased currency rate		
 -- Added Wizard class		
 -- Fixed attack speed, based off of framerate, because unit would insta kill each other		
 -		
 -2017-05-25 XXX		
 -- Created Commander class		
 -- Player movement and attacking		
 -		
 -2017-05-25 ZZZ	
 -- Tried implementing PriorityQueue that is integral in the attack function of the wizard (lots of bugs, not fixed) 		
 -		
 -2017-05-29 YYY		
 -- Started on a rudimentary implementation of an AI.		
 -- Modified identifier() to identify unit type.		
 -		
 -2017-05-29 XXX		
 --Updated README.md(Hw45)		
 -		
 -2017-05-30 YYY	
 -- More work on AI		
 -		
 -2017-05-30 XXX		
 --Fixed Unit Priority Queue, Units now are spawned in based off of individual training times		
 --Updated flowchart		
 -		
 -2017-05-30 ZZZ 		
 --Wizards now can attack without issues using the priority queue for targeting		
 --For class ArrayPriorityQueue, added the method at which wizards shall use to search and remove (removal of lowest life) in targeting		
 --Updated UML diagrams and plan 		
 --Worked on class Giant, not up yet		
 -		
 -2017-05-31 ZZZ		
 --Added Giants 		
 --Fixed Wizard attack algorithm (should be final version)		
 -		
 -2017-05-31 XXX		
 --Added nexus		
 --added recharge time for commander, commander can only use attack for a certain amount of time		
 --Made inline comments for each variable used		
 -		
 -		
 -2017-06-01 ZZZ	
 --Updated UML diagrams and plan 		
 -		
 -2017-06-01 XXX		
 -- Added images for our castles		
 -- Changed attackpoint range for castle		
 -- changed miner costs, now costs more after each upgrade		
 -- Commander does less damage per each second(makes charged attacks more efficient)		
 -		
 -2017-06-04 XXX	
 -- PriorityQueue now based off of frameCount, makes it so higher cooldown characters are summoned.		
 -- Units now don't wait for larger units to spawn		
 -		
 -2017-06-05 ZZZ		
 --Changed wizard's shape --> it is now a triangle which resembles a wizard's hat		
 --Added the sky image and updated the battleground color		
 -		
 -2017-06-06 XXX
 -- Got rid of images, caused too much lag :(		
 -- Created deck class		
 -- Added cards into menu		
 -		
 -2017-06-06,07 XXX		
 -- deck finished! Special effects, displayd on the field, uses queue.		
 -  -built in timer, cards get back onto the field after a certain amount of time has passed		
 -  -Implemented Gold, increased commander Power, increased commander Speed, and heal(for nexus)		
 -- Balancing.........costs, trainingTime, attack damage		
 -- Added Graphics		
 -  - Shows currency costs for each button and card		
 -  - Nexus has health number on top		
 -		
 -2017-06-06,07 YYY	
 -- With ZZZ created Revive button		
 -- Created End game mechanics		
 -- Balancing.....changed wizard graphics		
 -		
 -2017-06-06,07 ZZZ		
 -- Fixed Wizard bug		
 -- Added in Revive button timer mechanism		
 -		
